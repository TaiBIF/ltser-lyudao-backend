# Generated by Django 4.2 on 2023-09-15 04:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0032_alter_plantdata_locationid'),
    ]

    operations = [
        migrations.CreateModel(
            name='AquaticfaunaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataID', models.CharField(max_length=255)),
                ('eventID', models.CharField(max_length=255)),
                ('time', models.DateField()),
                ('season', models.CharField(max_length=50)),
                ('Year', models.IntegerField()),
                ('Month', models.IntegerField()),
                ('river', models.CharField(max_length=255)),
                ('locationID', models.CharField(max_length=50)),
                ('surveyObjectID', models.CharField(max_length=255)),
                ('surveyObject', models.CharField(max_length=255)),
                ('Phylum', models.CharField(max_length=255)),
                ('phylum_c', models.CharField(max_length=255)),
                ('class_field', models.CharField(db_column='class', max_length=255)),
                ('class_c', models.CharField(max_length=255)),
                ('Family', models.CharField(blank=True, max_length=255, null=True)),
                ('family_c', models.CharField(blank=True, max_length=255, null=True)),
                ('scientificName', models.CharField(max_length=255)),
                ('vernacularName', models.CharField(max_length=255)),
                ('taxonRank', models.CharField(max_length=100)),
                ('individualCount', models.IntegerField()),
                ('samplingProtocol', models.CharField(max_length=255)),
                ('Abundance', models.FloatField()),
                ('AbundanceUnit', models.CharField(max_length=100)),
                ('informationWithheld', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'AquaticfaunaData',
            },
        ),
        migrations.CreateModel(
            name='StreamData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataID', models.CharField(max_length=255)),
                ('eventID', models.CharField(max_length=255)),
                ('time', models.DateField()),
                ('locationID', models.CharField(max_length=50)),
                ('locality', models.CharField(max_length=255)),
                ('waterTemperature', models.FloatField()),
                ('pH', models.FloatField()),
                ('DO', models.FloatField()),
                ('conductivity', models.FloatField()),
                ('salinity', models.FloatField()),
                ('SS', models.FloatField()),
                ('NH3_H', models.FloatField()),
                ('NO2_H', models.FloatField()),
                ('NO3_H', models.FloatField()),
                ('PO4_P', models.FloatField()),
                ('BOD5', models.FloatField()),
                ('RPI_Score', models.FloatField()),
                ('RPI_Level', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'StreamData',
            },
        ),
    ]
